swagger: "2.0"
info:
  description: "This is a demo app for the louvre museum consisting of both the frontend and the backend. The current document is a documentaion for the backend API"
  version: "1.0.0"
  title: "Louvre Demo App"
  contact:
    email: "omarafifi@windowslive.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "louvre-backend.herokuapp.com"
basePath: "/"
tags:
- name: "art"
  description: "Everything concerning the art model"
- name: "user"
  description: "Operations about user"
 

paths:
  /art:
    get:
      tags:
      - "art"
      summary: "Returns art objects"
      description: "Returns all art objects in this page"
      produces:
      - "application/json"
      parameters:
      - name: "page_number"
        in: "query"
        description: "The page number to get the items"
        type: "string"
      - name: "items_per_page"
        in: "query"
        description: "The number of items per page"
        type: "string"
      responses:
        "200":
          description: "successful operation"
    post:
      tags:
      - "art"
      summary: "Add an art item to the database"
      description: "Add an art item to the database"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "art details"
        required: true
        schema:
          $ref: "#/definitions/Art"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Art"
        "400":
          description: "Invalid Art"
    put:
      tags:
      - "art"
      summary: "Edit an art item"
      description: "Edit an art item"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "art details"
        required: true
        schema:
          $ref: "#/definitions/Art"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Art"
        "400":
          description: "Invalid Art"
  /art/{artId}:
    delete:
      tags:
      - "art"
      summary: "Delete art"
      description: "Delete art using id"
      produces:
      - "application/json"
      parameters:
      - name: "artId"
        in: "path"
        description: "ID of the art that needs to be deleted"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Art not found"
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "Create new user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: "Logs user into the system"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "body"
        description: "The username for login"
        required: true
        schema:
          type: object
          required:
            - username
            - password
          properties:
            username:
              type: string
            password:
              type: string
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid username/password supplied"
  /users:
    get:
      tags:
      - "user"
      summary: "Get users"
      description: "Get users (must be an admin)"
      produces:
      - "application/json"
      parameters:
      - name: "page_number"
        in: "query"
        description: "The page number to get the items"
        type: "string"
      - name: "items_per_page"
        in: "query"
        description: "The number of items per page"
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: "Logs out current logged in user session"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/logoutall:
    post:
      tags:
      - "user"
      summary: "Log out from all devices"
      description: "Logs out current logged in user from all sessions on all devices"
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
definitions:
  User:
    type: "object"
    required:
    - "username"
    - "password"
    - "phone"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      role:
        type: "string"
      tokens:
        type: "array"
        xml:
          name: "token"
          wrapped: true
        items:
          type: "string"
    xml:
      name: "User"
  Art:
    type: "object"
    required:
    - "name"
    - "artist"
    - "description"
    - "image"
    properties:
      id:
        type: "string"
      image:
        type: "string"
        description: "image url"
      name:
        type: "string"
      artist:
        type: "string"
      description:
        type: "string"
    xml:
      name: "Art"